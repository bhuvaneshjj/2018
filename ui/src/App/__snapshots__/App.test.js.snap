// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`with websocket connected, authenticated 1`] = `
<div
  className="App__div"
>
  <Uncontrolled(Navbar)
    bsStyle="default"
    inverse={true}
  >
    <NavbarHeader>
      <Link
        replace={false}
        to="/"
      >
        <img
          alt="logo"
          className="App__logo--animated"
          src="logo.svg"
        />
      </Link>
    </NavbarHeader>
    <Nav
      bsClass="nav"
      className="App__Nav"
      justified={false}
      pullLeft={false}
      pullRight={false}
      stacked={false}
    >
      <NavsAuthenticated />
      <CurrentItem
        route="/"
      />
    </Nav>
    <Nav
      bsClass="nav"
      className="App__Nav"
      justified={false}
      pullLeft={false}
      pullRight={true}
      stacked={false}
    >
      <LinkContainer
        activeClassName="active"
        exact={false}
        key="signout"
        replace={false}
        strict={false}
        to="/signout"
      >
        <NavItem
          active={false}
          disabled={false}
          eventKey={6}
        >
          <Glyphicon
            bsClass="glyphicon"
            glyph="log-out"
          />
           Odhlášení
        </NavItem>
      </LinkContainer>
      <LinkContainer
        activeClassName="active"
        exact={false}
        replace={false}
        strict={false}
        to="/about"
      >
        <NavItem
          active={false}
          disabled={false}
          eventKey={7}
        >
          <Glyphicon
            bsClass="glyphicon"
            glyph="question-sign"
          />
           O aplikaci
        </NavItem>
      </LinkContainer>
    </Nav>
  </Uncontrolled(Navbar)>
  <main>
    <Switch>
      <Route
        component={[Function]}
        exact={true}
        path="/"
      />
      <Route
        component={[Function]}
        path="/about"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/casomira"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/dohlaseni"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/dohlasky"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/pokladna"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/poradi"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/prihlaseni"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/prihlasky"
      />
      <Connect(UnauthorizedRoute)
        component={[Function]}
        path="/signin"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/signout"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/startujici"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/startovni-cisla"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/stopky"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/ubytovani"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/ucastnici"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/vysledky"
      />
      <Redirect
        push={false}
        to="/"
      />
    </Switch>
  </main>
</div>
`;

exports[`with websocket connected, not authenticated 1`] = `
<div
  className="App__div"
>
  <Uncontrolled(Navbar)
    bsStyle="default"
    inverse={true}
  >
    <NavbarHeader>
      <Link
        replace={false}
        to="/"
      >
        <img
          alt="logo"
          className="App__logo--animated"
          src="logo.svg"
        />
      </Link>
    </NavbarHeader>
    <Nav
      bsClass="nav"
      className="App__Nav"
      justified={false}
      pullLeft={false}
      pullRight={true}
      stacked={false}
    >
      <LinkContainer
        activeClassName="active"
        exact={false}
        replace={false}
        strict={false}
        to="/signin"
      >
        <NavItem
          active={false}
          disabled={false}
          eventKey={5}
        >
          <Glyphicon
            bsClass="glyphicon"
            glyph="log-in"
          />
           Přihlášení
        </NavItem>
      </LinkContainer>
      <LinkContainer
        activeClassName="active"
        exact={false}
        replace={false}
        strict={false}
        to="/about"
      >
        <NavItem
          active={false}
          disabled={false}
          eventKey={7}
        >
          <Glyphicon
            bsClass="glyphicon"
            glyph="question-sign"
          />
           O aplikaci
        </NavItem>
      </LinkContainer>
    </Nav>
  </Uncontrolled(Navbar)>
  <main>
    <Switch>
      <Route
        component={[Function]}
        exact={true}
        path="/"
      />
      <Route
        component={[Function]}
        path="/about"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/casomira"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/dohlaseni"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/dohlasky"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/pokladna"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/poradi"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/prihlaseni"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/prihlasky"
      />
      <Connect(UnauthorizedRoute)
        component={[Function]}
        path="/signin"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/signout"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/startujici"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/startovni-cisla"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/stopky"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/ubytovani"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/ucastnici"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/vysledky"
      />
      <Redirect
        push={false}
        to="/"
      />
    </Switch>
  </main>
</div>
`;

exports[`with websocket disconnected, authenticated 1`] = `
<div
  className="App__div"
>
  <Uncontrolled(Navbar)
    bsStyle="default"
    inverse={true}
  >
    <NavbarHeader>
      <Link
        replace={false}
        to="/"
      >
        <img
          alt="logo"
          className="App__logo"
          src="logo.svg"
        />
      </Link>
    </NavbarHeader>
    <Nav
      bsClass="nav"
      className="App__Nav"
      justified={false}
      pullLeft={false}
      pullRight={false}
      stacked={false}
    >
      <NavsAuthenticated />
      <CurrentItem
        route="/"
      />
    </Nav>
    <Nav
      bsClass="nav"
      className="App__Nav"
      justified={false}
      pullLeft={false}
      pullRight={true}
      stacked={false}
    >
      <LinkContainer
        activeClassName="active"
        exact={false}
        key="signout"
        replace={false}
        strict={false}
        to="/signout"
      >
        <NavItem
          active={false}
          disabled={false}
          eventKey={6}
        >
          <Glyphicon
            bsClass="glyphicon"
            glyph="log-out"
          />
           Odhlášení
        </NavItem>
      </LinkContainer>
      <LinkContainer
        activeClassName="active"
        exact={false}
        replace={false}
        strict={false}
        to="/about"
      >
        <NavItem
          active={false}
          disabled={false}
          eventKey={7}
        >
          <Glyphicon
            bsClass="glyphicon"
            glyph="question-sign"
          />
           O aplikaci
        </NavItem>
      </LinkContainer>
    </Nav>
  </Uncontrolled(Navbar)>
  <main>
    <Switch>
      <Route
        component={[Function]}
        exact={true}
        path="/"
      />
      <Route
        component={[Function]}
        path="/about"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/casomira"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/dohlaseni"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/dohlasky"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/pokladna"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/poradi"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/prihlaseni"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/prihlasky"
      />
      <Connect(UnauthorizedRoute)
        component={[Function]}
        path="/signin"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/signout"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/startujici"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/startovni-cisla"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/stopky"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/ubytovani"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/ucastnici"
      />
      <Connect(AuthorizedRoute)
        component={[Function]}
        path="/vysledky"
      />
      <Redirect
        push={false}
        to="/"
      />
    </Switch>
  </main>
</div>
`;
